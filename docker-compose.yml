version: "3.7" # Bạn có thể xóa dòng này vì Docker Compose V2 không cần

services:
  traefik:
    image: "traefik:v3.0"
    restart: always
    command:
      - "--api.dashboard=true" # Giữ lại để API dashboard có sẵn nếu cần (ví dụ qua port-forward)
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.websecure.http.tls.certresolver=mytlschallenge"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Bạn có thể xóa dòng này nếu không bao giờ debug dashboard qua cổng này
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web-proxy
    labels:
      - "traefik.enable=true" # Cần thiết để Traefik tự quản lý các middleware chung
      # --- Middleware bảo mật chung ---
      - "traefik.http.middlewares.secure-headers.headers.SSLRedirect=true"
      - "traefik.http.middlewares.secure-headers.headers.STSSeconds=315360000"
      - "traefik.http.middlewares.secure-headers.headers.browserXSSFilter=true"
      - "traefik.http.middlewares.secure-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.secure-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.secure-headers.headers.SSLHost=${DOMAIN_NAME}"
      - "traefik.http.middlewares.secure-headers.headers.STSIncludeSubdomains=true"
      - "traefik.http.middlewares.secure-headers.headers.STSPreload=true"

  fastapi-app:
    build:
      context: ./finext-fastapi
      dockerfile: dockerfile
    restart: always
    networks:
      - web-proxy
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`${DOMAIN_NAME}`) && (PathPrefix(`/auth`) || PathPrefix(`/users`) || PathPrefix(`/roles`) || PathPrefix(`/permissions`) || PathPrefix(`/sessions`) || PathPrefix(`/sse`))"
      - "traefik.http.routers.fastapi.priority=10"
      - "traefik.http.routers.fastapi.entrypoints=websecure"
      - "traefik.http.routers.fastapi.tls.certresolver=mytlschallenge"
      - "traefik.http.services.fastapi-service.loadbalancer.server.port=8000"
      - "traefik.http.routers.fastapi.middlewares=secure-headers@docker"

  nextjs-app:
    build:
      context: ./finext-nextjs
      dockerfile: dockerfile
      args:
        - NEXT_PUBLIC_FASTAPI_BASE_URL_ARG=https://${DOMAIN_NAME}
    restart: always
    networks:
      - web-proxy
    depends_on:
      - fastapi-app
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.nextjs.priority=1"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=mytlschallenge"
      - "traefik.http.services.nextjs-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.nextjs.middlewares=secure-headers@docker"

volumes:
  traefik_data: {}

networks:
  web-proxy: {}