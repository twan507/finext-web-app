import subprocess
import sys
import os
from pathlib import Path


def run_fastapi_server():
    """Ch·∫°y FastAPI server v·ªõi m√¥i tr∆∞·ªùng development"""

    # ƒê∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c finext-fastapi
    fastapi_dir = Path(__file__).parent

    # Ki·ªÉm tra xem th∆∞ m·ª•c c√≥ t·ªìn t·∫°i kh√¥ng
    if not fastapi_dir.exists():
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c: {fastapi_dir}")
        return

    # ƒê∆∞·ªùng d·∫´n ƒë·∫øn m√¥i tr∆∞·ªùng ·∫£o
    venv_path = fastapi_dir / "venv"
    python_exe = venv_path / "Scripts" / "python.exe"

    # Ki·ªÉm tra m√¥i tr∆∞·ªùng ·∫£o
    if not python_exe.exists():
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y m√¥i tr∆∞·ªùng ·∫£o t·∫°i: {venv_path}")
        print("üí° H√£y t·∫°o m√¥i tr∆∞·ªùng ·∫£o b·∫±ng l·ªánh: python -m venv finext-fastapi/venv")
        return

    # Ki·ªÉm tra file .env.development
    env_file = fastapi_dir / ".env.development"
    if not env_file.exists():
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file m√¥i tr∆∞·ªùng: {env_file}")
        print("üí° H√£y t·∫°o file .env.development trong th∆∞ m·ª•c finext-fastapi")
        return

    print("üöÄ ƒêang kh·ªüi ƒë·ªông Finext FastAPI server...")
    print(f"üìÅ Th∆∞ m·ª•c l√†m vi·ªác: {fastapi_dir}")
    print(f"üêç Python executable: {python_exe}")
    print(f"‚öôÔ∏è  Environment file: {env_file}")

    try:
        # Chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c finext-fastapi
        os.chdir(fastapi_dir)

        # Ch·∫°y uvicorn v·ªõi m√¥i tr∆∞·ªùng ·∫£o
        cmd = [
            str(python_exe),
            "-m",
            "uvicorn",
            "app.main:app",
            "--reload",
            "--env-file",
            ".env.development",
            "--host",
            "127.0.0.1",
            "--port",
            "8000",
        ]

        print(f"üîß L·ªánh ch·∫°y: {' '.join(cmd)}")
        print("\n" + "=" * 50)
        print("üåê Server s·∫Ω ch·∫°y t·∫°i: http://127.0.0.1:8000")
        print("üìö API Docs: http://127.0.0.1:8000/api/v1/docs")
        print("üõë Nh·∫•n CTRL+C ƒë·ªÉ d·ª´ng server")
        print("=" * 50 + "\n")

        # Ch·∫°y server
        subprocess.run(cmd, check=True)

    except KeyboardInterrupt:
        print("\nüõë Server ƒë√£ ƒë∆∞·ª£c d·ª´ng b·ªüi ng∆∞·ªùi d√πng")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå L·ªói khi ch·∫°y server: {e}")
    except Exception as e:
        print(f"‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {e}")


def install_dependencies():
    """C√†i ƒë·∫∑t dependencies cho d·ª± √°n"""

    fastapi_dir = Path(__file__).parent / "finext-fastapi"
    venv_path = fastapi_dir / "venv"
    requirements_file = fastapi_dir / "requirements.txt"
    python_exe = venv_path / "Scripts" / "python.exe"
    pip_exe = venv_path / "Scripts" / "pip.exe"

    if not python_exe.exists():
        print("‚ùå M√¥i tr∆∞·ªùng ·∫£o ch∆∞a ƒë∆∞·ª£c t·∫°o")
        return

    if not requirements_file.exists():
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file: {requirements_file}")
        return

    print("üì¶ ƒêang c√†i ƒë·∫∑t dependencies...")
    try:
        subprocess.run([str(pip_exe), "install", "-r", str(requirements_file)], check=True, cwd=fastapi_dir)
        print("‚úÖ C√†i ƒë·∫∑t dependencies th√†nh c√¥ng!")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå L·ªói khi c√†i ƒë·∫∑t dependencies: {e}")


def create_venv():
    """T·∫°o m√¥i tr∆∞·ªùng ·∫£o m·ªõi"""

    fastapi_dir = Path(__file__).parent / "finext-fastapi"
    venv_path = fastapi_dir / "venv"

    if venv_path.exists():
        print("‚ÑπÔ∏è  M√¥i tr∆∞·ªùng ·∫£o ƒë√£ t·ªìn t·∫°i")
        return

    print("üîß ƒêang t·∫°o m√¥i tr∆∞·ªùng ·∫£o...")
    try:
        subprocess.run([sys.executable, "-m", "venv", str(venv_path)], check=True)
        print("‚úÖ T·∫°o m√¥i tr∆∞·ªùng ·∫£o th√†nh c√¥ng!")

        # T·ª± ƒë·ªông c√†i ƒë·∫∑t dependencies
        install_dependencies()

    except subprocess.CalledProcessError as e:
        print(f"‚ùå L·ªói khi t·∫°o m√¥i tr∆∞·ªùng ·∫£o: {e}")


def main():
    """H√†m main v·ªõi menu l·ª±a ch·ªçn"""

    print("\n" + "=" * 60)
    print("üöÄ FINEXT FASTAPI DEVELOPMENT SERVER")
    print("=" * 60)
    print("1. Ch·∫°y server (m·∫∑c ƒë·ªãnh)")
    print("2. T·∫°o m√¥i tr∆∞·ªùng ·∫£o")
    print("3. C√†i ƒë·∫∑t dependencies")
    print("4. Tho√°t")
    print("=" * 60)

    # N·∫øu ch·∫°y kh√¥ng c√≥ tham s·ªë, m·∫∑c ƒë·ªãnh ch·∫°y server
    if len(sys.argv) == 1:
        run_fastapi_server()
        return

    # X·ª≠ l√Ω tham s·ªë d√≤ng l·ªánh
    if len(sys.argv) > 1:
        arg = sys.argv[1].lower()
        if arg in ["run", "server", "1"]:
            run_fastapi_server()
        elif arg in ["venv", "create-venv", "2"]:
            create_venv()
        elif arg in ["install", "deps", "3"]:
            install_dependencies()
        elif arg in ["help", "-h", "--help"]:
            print("\nS·ª≠ d·ª•ng:")
            print("  python main.py              # Ch·∫°y server")
            print("  python main.py run          # Ch·∫°y server")
            print("  python main.py venv         # T·∫°o m√¥i tr∆∞·ªùng ·∫£o")
            print("  python main.py install      # C√†i ƒë·∫∑t dependencies")
        else:
            print(f"‚ùå Tham s·ªë kh√¥ng h·ª£p l·ªá: {arg}")
            print("üí° S·ª≠ d·ª•ng 'python main.py help' ƒë·ªÉ xem h∆∞·ªõng d·∫´n")
    else:
        # Menu t∆∞∆°ng t√°c
        choice = input("\nCh·ªçn t√πy ch·ªçn (1-4): ").strip()

        if choice == "1" or choice == "":
            run_fastapi_server()
        elif choice == "2":
            create_venv()
        elif choice == "3":
            install_dependencies()
        elif choice == "4":
            print("üëã T·∫°m bi·ªát!")
        else:
            print("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá")


if __name__ == "__main__":
    main()
