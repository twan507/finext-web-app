# Định nghĩa upstream cho FastAPI (backend)
# Tên service "fastapi-app" phải khớp với tên trong docker-compose.yml
upstream fastapi_server {
    server fastapi:8000;
}

# Định nghĩa upstream cho Next.js (frontend)
# Tên service "nextjs-app" phải khớp với tên trong docker-compose.yml
upstream nextjs_server {
    server nextjs:3000;
}

server {
    listen 80;
    # Thay localhost bằng tên miền của bạn nếu cần, ví dụ: finext.local
    # Hoặc để trống để chấp nhận bất kỳ tên miền nào trỏ đến IP này
    server_name localhost your_actual_domain.com; 

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Định tuyến các yêu cầu bắt đầu bằng /api/ đến FastAPI
    # Điều này sẽ bao gồm /api/v1/, /api/v2/, v.v.
    location /api/ {
        proxy_pass http://fastapi_server; # Sử dụng upstream cho backend

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Vì chúng ta đang chạy HTTP, X-Forwarded-Proto nên là http
        proxy_set_header X-Forwarded-Proto http; 
        # proxy_set_header X-NginX-Proxy true; # Header tùy chọn, có thể giữ hoặc bỏ

        # Cấu hình quan trọng cho Server-Sent Events (SSE) nếu FastAPI sử dụng
        proxy_http_version 1.1;
        # Đối với SSE, bạn thường muốn xóa header Connection hoặc để trống, 
        # không phải 'upgrade' (upgrade là cho WebSockets).
        proxy_set_header Connection ""; 
        proxy_buffering off; # Tắt buffering để dữ liệu SSE được gửi ngay
        proxy_cache off;     # Không cache các phản hồi SSE
        # proxy_read_timeout 86400s; # Tăng thời gian chờ nếu có kết nối SSE dài
    }

    # Định tuyến tất cả các yêu cầu còn lại đến Next.js (Frontend)
    location / {
        proxy_pass http://nextjs_server; # Sử dụng upstream cho frontend

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;

        # Các header này rất quan trọng nếu Next.js của bạn sử dụng WebSockets
        # (ví dụ: cho hot module reloading trong quá trình phát triển, hoặc các tính năng khác)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
}